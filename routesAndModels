/*

--------------------- Google Books API ----------------
/search                     - fetch books from Google Books API


--------------------- Models --------------------------
/users                      - model to store users with embedded data such as 'followingLists', 'followingUsers' 
/lists                      - model to store lists with embedded data such as 'bookItems' and 'followers'
/books                      - model to store books with embedded data such as 'userFollowed', 'listFollowed'


--------------------- BACKEND --------------------------
api/users/:id/lists            - fetch all the lists for a given user 
api/users/:id/books            - fetch all the books for a given user


/users                      - fetch users (Will we fetch books only?)
/books                      -fetch books  (Will we fetch books only?)   
/lists                      -fetch lists  (Will we fetch lists only?)   





add/push items to []
router.get('/add_to_my_lists', async (req, res) =>{
        const list = "6230b48564d8d3a0a99e0d21"
        
        const user = await User.findOneAndUpdate({
             _id: "6230e58ee8ace707b68fee77",
        },{
            $addToSet: {
                myLists: list,
            },
        })
        res.send(user)
})


router.get('/add_to_my_lists', async (req, res) =>{
        const list = "6230b48564d8d3a0a99e0d21"
        
        const user = await User.findOneAndUpdate({
             _id: "6230e58ee8ace707b68fee77",
        },{
            $pull: {
                myLists: list,
            },
        })
        res.send(user)
})


router.get('/add_to_my_lists', async (req, res) =>{
        const list = "6230b48564d8d3a0a99e0d21"
        
        const user = await User.findOneAndUpdate({
             _id: "6230e58ee8ace707b68fee77",
        },{
            $push: {
                myLists: list,
            },
        })
        res.send(user)
}


*/




